sort
  Actors       = struct Alice | Mallory ;
  Machines     = struct Client | Server ;
  Credentials  = struct psw1 | psw2 ;

act
  startTerm,loggingOut : Actors # Machines;
  loggingInRem,  exploiting, bruteforcingPsw : Actors # Machines # Machines # Credentials;
  eavesdropping : Actors # Actors # Machines # Machines # Credentials;
  final;

sort 
  Located_tuple     = struct l(a:Actors, m: Machines);
  Connected_tuple = struct c(m1:Machines, m2:Machines);
  Stores_tuple        = struct s(m:Machines, c:Credentials);
  Knows_tuple       = struct k(a:Actors, c:Credentials);

  Located     = Located_tuple -> Bool;
  Connected = Connected_tuple -> Bool;
  Stores        = Stores_tuple -> Bool;
  Knows       = Knows_tuple -> Bool;

map
  init_located : Located;
  init_connected : Connected;
  init_stores : Stores;
  init_knows : Knows;

var aa:Actors; mm1,mm2:Machines; cc:Credentials; 
eqn
  init_located(l(aa,mm1)) = false;
  init_connected(c(mm1,mm2)) = false;
  init_stores(s(mm1,cc)) = false;
  init_knows(k(aa,cc)) = false;
  

proc
  X(located : Located, connected : Connected, stores : Stores, knows : Knows)
=

  (located(l(Mallory,Server))) -> final. X() % signal Mallory reached her goal
+
(
% loggingInRem
  sum aa:Actors, mm,mm1:Machines, cc:Credentials. 
    (!located(l(Mallory,Server)) && located(l(aa,mm)) && connected(c(mm,mm1)) && stores(s(mm1,cc)) && knows(k(aa,cc)))
    ->
      loggingInRem(aa,mm,mm1,cc). X(located = located[l(aa,mm1) -> true])
+
%LoggingOut
  sum aa:Actors, mm:Machines.
	(!located(l(Mallory,Server)) && located(l(aa,mm)))
	->
	loggingOut(aa,mm).X(located=located[l(aa,mm) -> false])
+
% startTerm
  sum aa:Actors, mm:Machines.
	(!located(l(Mallory,Server)) && aa == Alice && !located(l(aa,mm)) && mm == Client)
	->
	   startTerm(aa,mm).X(located = located[l(aa,mm)-> true])
+
% exploiting
  sum aa:Actors, mm,mm1:Machines, cc:Credentials.
    (!located(l(Mallory,Server)) && aa == Mallory && located(l(aa,mm)) && connected(c(mm,mm1)) && cc== psw2)
    ->
      exploiting(aa,mm,mm1,cc). X(stores = stores[s(mm1,cc) -> true], knows=knows[k(aa,cc) -> true] )

+
% bruteforcingPsw
  sum aa:Actors, mm,mm1:Machines, cc:Credentials.
    (!located(l(Mallory,Server)) && aa == Mallory && located(l(aa,mm)) && connected(c(mm,mm1)) && stores(s(mm1,cc)))
    ->
      bruteforcingPsw(aa,mm,mm1,cc). X(knows = knows[k(aa,cc) -> true] )

+
% eavesdropping
  sum aa,aa1:Actors, mm,mm1:Machines, cc:Credentials.
    (!located(l(Mallory,Server)) && aa != aa1 && aa1 == Mallory && located(l(aa,mm)) && located(l(aa1,mm)) && connected(c(mm,mm1)) && knows(k(aa,cc)) && stores(s(mm1,cc)))
    ->
      eavesdropping(aa,aa1,mm,mm1,cc). X(knows = knows[k(aa1,cc) -> true])
)

;

init X(init_located[l(Mallory,Client) -> true], 
         init_connected[c(Client,Server) -> true], 
         init_stores[s(Server,psw1) -> true],
         init_knows[k(Alice,psw1) -> true]
        );